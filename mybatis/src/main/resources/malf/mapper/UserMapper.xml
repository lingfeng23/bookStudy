<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="malf.mapper.UserMapper">
	<resultMap id="userMap" type="malf.model.SysUser">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="password" column="password"/>
		<result property="email" column="email"/>
		<result property="info" column="info"/>
		<result property="image" column="image" jdbcType="BLOB"/>
		<result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
	</resultMap>
	<select id="selectById" resultMap="userMap">
		SELECT *
		FROM sys_user
		WHERE id = #{id}
	</select>
	<select id="selectAll" resultType="malf.model.SysUser">
		SELECT *
		FROM sys_user
	</select>
	<select id="selectRolesByUserId" resultType="malf.model.SysRole">
		SELECT r.id, r.name, r.enabled, r.create_by createBy, r.create_time createTime
		FROM sys_user u
		INNER JOIN user_role ur on u.id = ur.userId
		INNER JOIN sys_role r on ur.roleId = r.id
		WHERE u.id = #{userId}
	</select>
	<insert id="insert">
		INSERT INTO sys_user(id, name, password, email, info, image, create_time)
		VALUES(#{id}, #{name}, #{password}, #{email}, #{info}, #{image, jdbcType=BLOB}, #{createTime, jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertNew" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO sys_user(name, password, email, info, image, create_time)
		VALUES(#{name}, #{password}, #{email}, #{info}, #{image, jdbcType=BLOB}, #{createTime, jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertNew2">
		INSERT INTO sys_user(name, password, email, info, image, create_time)
		VALUES(#{name}, #{password}, #{email}, #{info}, #{image, jdbcType=BLOB}, #{createTime, jdbcType=TIMESTAMP})
		<selectKey keyColumn="id" resultType="long" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	<update id="updateById">
		UPDATE sys_user
		SET name = #{name},
			password = #{password},
			email = #{email},
			info = #{info},
			image = #{image, jdbcType=BLOB},
			create_time = #{createTime, jdbcType=TIMESTAMP}
		WHERE id = #{id}
	</update>
	<delete id="deleteById">
		DELETE
		FROM sys_user
		WHERE id = #{id}
	</delete>
	<select id="selectRolesByUserIdAndRoleEnabled" resultType="malf.model.SysRole">
		SELECT r.id, r.name, r.enabled, r.create_by, r.create_time
		FROM sys_user u
		INNER JOIN user_role ur on u.id = ur.userId
		INNER JOIN sys_role r on ur.roleId = r.id
		WHERE u.id = #{userId} AND r.enabled = #{enabled}
	</select>
	<select id="selectByUser" resultType="malf.model.SysUser">
		SELECT id, name, password, email, info, image, create_time createTime
		FROM sys_user
		<where>
			<if test="name != null and name != ''">
				<bind name="nameLike" value="'%' + name + '%'"/>
				AND name like #{nameLike}
			</if>
			<!--bind 和下面等同-->
			<!--<if test="name != null and name != ''">
				AND name like concat('%', #{name}, '%')
			</if>-->
			<if test="email != null and email != ''">
				AND email = #{email}
			</if>
		</where>
	</select>
	<update id="updateByIdSelective">
		UPDATE sys_user
		<set>
			<if test="name != null and name != ''">
				name = #{name}
			</if>
			<if test="password != null and password != ''">
				password = #{password}
			</if>
			<if test="email != null and email != ''">
				email = #{email}
			</if>
			<if test="info != null and info != ''">
				info = #{info}
			</if>
		</set>
		WHERE id = #{id}
	</update>
	<select id="selectByIdOrName" resultType="malf.model.SysUser">
		SELECT id, name, password, email, info
		FROM sys_user
		WHERE 1=1
		<choose>
			<when test="id != null">
				AND id = #{id}
			</when>
			<when test="name != null and name != ''">
				AND name = #{name}
			</when>
			<otherwise>
				AND 1=2
			</otherwise>
		</choose>
	</select>
	<select id="selectByIdList" resultType="malf.model.SysUser">
		SELECT id, name, password, email
		FROM sys_user
		WHERE id in
		<foreach collection="list" open="(" close=")" separator=","
				 item="id" index="i">
			#{id}
		</foreach>
	</select>
	<insert id="insertList">
		INSERT INTO sys_user(
			name, password, email, info, image, create_time)
		VALUES
		<foreach collection="list" item="user" separator=",">
			(
			#{user.name}, #{user.password}, #{user.email},
			#{user.info}, #{user.image, jdbcType=BLOB}, #{user.createTime, jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>
	<update id="updateByMap">
		UPDATE sys_user
		SET
		<foreach collection="_parameter" item="val" index="key" separator=",">
			${key} = #{val}
		</foreach>
		WHERE id= #{id}
	</update>
</mapper>